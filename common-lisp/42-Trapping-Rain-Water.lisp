(defun trap (height)
  (let ((lo 0)
        (hi (1- (length height)))
        (res 0))
    (loop while (< lo hi)
       do (if (< (nth lo height)
                 (nth hi height))
              (let ((m (nth lo height))
                    (p lo))
                (loop while (and (<= (incf lo) hi)
                                 (<= (nth lo height)
                                     (nth p height)))
                   do (incf res (- m (nth lo height)))))
              (let ((m (nth hi height))
                    (p hi))
                (loop while (and (<= lo (decf hi))
                                 (<= (nth hi height)
                                     (nth p height)))
                   do (incf res (- m (nth hi height))))))
       finally (return res))))
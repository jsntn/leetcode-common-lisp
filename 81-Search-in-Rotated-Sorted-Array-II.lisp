(defun my-search (nums target)
  (let* ((lo 0)
         (hi (1- (length nums)))
         (mid))
    (loop while (<= lo hi)
       do (setf mid (floor (+ lo (/ (- hi lo) 2))))
         (if (= target (nth mid nums))
             (return t))
         (loop while (and (< lo mid)
                          (= (nth lo nums) (nth mid nums)))
            do (incf lo))
         (cond
           ((<= (nth lo nums) (nth mid nums))
            (if (and (<= (nth lo nums) target)
                     (< target (nth mid nums)))
                (setf hi (1- mid))
                (setf lo (1+ mid))))
           ((and (< (nth lo nums) target)
                 (<= target (nth hi nums)))
            (setf lo (1+ mid)))
           (t
            (setf hi (1- mid)))))))